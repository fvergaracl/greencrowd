version: "3.7"

services:
  appgc:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
      args:
        GIT_COMMIT_HASH: "${GIT_COMMIT_HASH}"
    container_name: interralink_prod
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./public:/usr/src/app/public 
    env_file:
      - .env.prod
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_HTTPS=true
      - NEXT_PUBLIC_PWA=true
    depends_on:
      - postgresgc_prod
      - miniogc_prod
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000"]
      interval: 30s
      timeout: 15s
      retries: 3
    networks:
      - greencrowd

  postgresgc_prod:
    image: postgres:15.3
    container_name: postgresgc_prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    env_file:
      - .env.prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d greencrowd"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - greencrowd

  miniogc_prod:
    container_name: miniogc_prod
    image: minio/minio:RELEASE.2024-04-28T17-53-50Z
    volumes:
      - minio_prod_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - greencrowd

  nginx:
    image: nginx:latest
    container_name: nginx-proxy_prod
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs
      - ./public:/usr/share/nginx/html/public
    networks:
      - greencrowd

volumes:
  minio_prod_data:
  postgres_prod_data:

networks:
  greencrowd:
    external: true
